{"version":3,"sources":["webpack:///./src/templates/postList.jsx","webpack:///./src/components/PostListCard/index.jsx"],"names":["Container","styled","div","LinkContainer","pageQuery","PostList","post","data","allMdx","pageContext","next","prev","currentPage","postTag","useState","nodes","posts","nextLink","prevLink","path","title","map","item","index","key","frontmatter","to","TagsData","require","Heading","Title","h4","MetaData","TagContainer","PostListCard","slug","subtitle","date","tags","style","textDecoration","color","tag","tagProperty","filter","bgColor","fontColor"],"mappings":"4FAAA,sIAQMA,EAAYC,IAAOC,IAAV,sEAAGD,CAAH,uFASTE,EAAgBF,IAAOC,IAAV,0EAAGD,CAAH,iDA2CNG,EAAS,aAwBPC,UA5DE,SAAC,GAAsC,IAAxBC,EAAuB,EAApCC,KAAMC,OAAaC,EAAiB,EAAjBA,YAC7BC,EAAiCD,EAAjCC,KAAKC,EAA4BF,EAA5BE,KAAKC,EAAuBH,EAAvBG,YAAYC,EAAWJ,EAAXI,QADwB,EAE5BC,mBAASR,EAAKS,OAAhCC,EAF8C,KAGjDC,GAHiD,KAGtC,KACXC,EAAuB,OAAZL,EAAmB,IAAnB,OAAgCA,EAC3CM,EAAoB,OAAZN,EAAmB,QAAnB,OAAoCA,EAYhD,OAVGF,GACEC,EAAc,IACfM,EAAWC,GAAQP,EAAY,IAGhCF,IACDO,EAAWE,GAAQP,EAAY,IAI1B,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAKQ,MAAM,SACX,kBAACpB,EAAD,KAEEgB,EAAMK,KAAI,SAACC,EAAKC,GACd,OAAO,kBAAC,IAAD,eAAcC,IAAKD,GAAWD,EAAKG,YAAiBhB,OAG/D,kBAACN,EAAD,KACIQ,EAAO,kBAAC,OAAD,CAAMe,GAAIR,GAAV,QAAkC,GACzCR,EAAO,kBAAC,OAAD,CAAMgB,GAAIT,GAAV,QAAkC,Q,kCCnDjD,6DAKMU,EAAWC,EAAQ,QAEnB5B,EAAYC,IAAOC,IAAV,8EAAGD,CAAH,6KAYT4B,EAAU5B,IAAOC,IAAV,4EAAGD,CAAH,yCAKP6B,EAAQ7B,IAAO8B,GAAV,0EAAG9B,CAAH,oEAQL+B,EAAW/B,IAAOC,IAAV,6EAAGD,CAAH,yCAKRgC,EAAehC,IAAOC,IAAV,iFAAGD,CAAH,kCAmCHiC,IA9BM,SAAC,GAAqC,IAApCd,EAAmC,EAAnCA,MAAMe,EAA6B,EAA7BA,KAAKC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,KAC/C,OACE,kBAAC,OAAD,CAAMZ,GAAE,IAAMS,EAAQI,MAAO,CAACC,eAAe,OAAOC,MAAO,YAC3D,kBAACzC,EAAD,KACA,kBAAC6B,EAAD,KACC,kBAACC,EAAD,KAAQV,GACR,2BAAIgB,IAEL,kBAACJ,EAAD,KACC,2BAAIK,GACJ,kBAACJ,EAAD,KACCK,EAAKjB,KAAI,SAACqB,EAAInB,GACd,IAAIoB,EAAchB,EAASiB,QAAO,SAACtB,GAAD,OAAUA,EAAKoB,MAAQA,KACrDG,EAAU,GACVC,EAAY,GAKhB,OAJIH,IACHE,EAAUF,EAAY,GAAGE,QACtBC,EAAYH,EAAY,GAAGG,WAExB,kBAAC,IAAD,CAAWtB,IAAKD,EAAOH,MAAOsB,EAAKG,QAASA,EAASC,UAAWA","file":"component---src-templates-post-list-jsx-18bec29a4b968d77a9f5.js","sourcesContent":["import React,{useState} from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport { graphql } from \"gatsby\"\nimport PostListCard from '../components/PostListCard'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  margin: 20px 0px;\n  padding:0px 10px;\n  width: 90%;\n  @media (max-width: 1000px) {\n    width: 100%;\n  }\n`\n\nconst LinkContainer = styled.div`\n   display: flex;\n   justify-content: space-between;\n`\n\n\n\nconst PostList = ({data:{allMdx:post},pageContext}) => {\n  const {next,prev,currentPage,postTag} = pageContext\n  const [posts,setPosts] = useState(post.nodes)\n  let nextLink = '/'\n  let prevLink = postTag === '//' ? '/' : `tag/${postTag}`\n  let path =  postTag === '//' ? 'page/' : `tag/${postTag}` \n  \n  if(prev){\n    if(currentPage > 2){\n      prevLink = path + (currentPage-1)\n    }\n  }\n  if(next){\n    nextLink = path + (currentPage+1)\n  }\n\n\n  return(<Layout>\n    <SEO title=\"Home\" />\n    <Container>\n    {\n      posts.map((item,index) => {\n        return <PostListCard key={index} {...item.frontmatter} {...pageContext} />\n      })\n    }\n    <LinkContainer>\n      { prev ? <Link to={prevLink}>Prev</Link> : '' }\n      { next ? <Link to={nextLink}>Next</Link> : '' }\n    </LinkContainer>\n    </Container>\n     \n  </Layout>\n  )\n}\n\n\nexport const pageQuery = graphql`\n  query pageQuery($skip: Int!, $limit: Int!, $postTag: String){\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: {tags: {regex: $postTag}}}\n    ){\n      nodes{\n        frontmatter\n        {\n          title,\n          subtitle,\n          slug,\n          date,\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`\n\n\nexport default PostList\n","import React from \"react\"\nimport styled from 'styled-components'\nimport { Link } from \"gatsby\"\nimport TagButton from '../TagButton'\n\nconst TagsData = require('../../TagsData')\n\nconst Container = styled.div`\n\tdisplay:flex;\n\tjustify-content: space-between;\n\talign-items:baseline;\n\tpadding:40px 10px;\n\tflex-wrap:wrap;\n\tborder-bottom: 1px dotted #303030;\n\t&:hover{\n\t\tbackground-color:aliceblue;\n\t};\n`\n\nconst Heading = styled.div`\n\tdisplay:flex;\n\tflex-direction:column;\n`\n\nconst Title = styled.h4`\n\tmargin-top:0;\n\tfont-size:30px;\n\tborder-bottom:0px;\n\tfont-weight:900;\n\n`\n\nconst MetaData = styled.div`\n\tdisplay:flex;\n\tflex-direction:column;\n`\n\nconst TagContainer = styled.div`\n\tdisplay:flex;\n\tflex-wrap:wrap;\n`\n\nconst PostListCard = ({title,slug,subtitle,date,tags}) => {\n\treturn (\n\t\t\t<Link to={`/${slug}`} style={{textDecoration:'none',color: 'inherit'}}>\n\t\t\t<Container>\n\t\t\t<Heading>\n\t\t\t\t<Title>{title}</Title>\n\t\t\t\t<p>{subtitle}</p>\t\n\t\t\t</Heading>\n\t\t\t<MetaData>\n\t\t\t\t<b>{date}</b>\n\t\t\t\t<TagContainer>\n\t\t\t\t{tags.map((tag,index) => {\n\t\t\t\t\tlet tagProperty = TagsData.filter((item) => item.tag === tag)\n\t\t\t\t\tlet bgColor = ''\n\t\t\t\t\tlet fontColor = ''\n\t\t\t\t\tif (tagProperty){\n\t\t\t\t\t\tbgColor = tagProperty[0].bgColor\n\t\t\t\t\t    fontColor = tagProperty[0].fontColor\n\t\t\t\t\t}\n\t\t\t\t\treturn <TagButton key={index} title={tag} bgColor={bgColor} fontColor={fontColor} />\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t\t</TagContainer>\n\t\t\t</MetaData>\n\t\t\t</Container>\n\t\t\t</Link>\n\t\t)\n}\n\n\nexport default PostListCard"],"sourceRoot":""}